- There are two nearly identical logging methods,
- server.log(tags, [data, [timestamp]]), and request.log(tags, [data]),
- which are to be called whenever you want to log an event in your application.

- You'll want to call request.log() whenever in the context of a request,
- such as in a route handler, request lifecycle extension or authentication scheme.

- You'll want to use server.log() everywhere else, where you have no specific request in scope,
- for instance, just after your server has started or inside a plugin's register() method.

- They both accept the same first two parameters. They are, tags and data.

- tags is a string or array of strings used to briefly identify the event.
- Think of them like log levels, but far more expressive.
- For example, you could tag an error retrieving data from your database like the following:

	server.log(['error', 'database', 'read']);


- Any log events that hapi generates internally will always have the hapi tag associated with them.

- The second parameter, data, is an optional string or object to log with the event.
- This is where you would pass in things like an error message,
- or any other details that you wish to go along with your tags.

- Additionally server.log() accepts a third timestamp parameter.
- This defaults to Date.now(), and should only be passed in if you need to override the default for some reason.
